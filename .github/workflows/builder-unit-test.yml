name: Open-CE Builder Unit Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install -y pylint=2.6.0 \
                           conda-build \
                           pytest=6.0.1 \
                           pytest-cov=2.10.1 \
                           pytest-mock=3.2.0
          pip install yamllint==1.24.2
      - name: Lint with pylint
        shell: bash -l {0}
        run: |
          PYTHONPATH=./open-ce/:${PYTHONPATH} pylint ./open-ce
      - name: Lint all test files for warnings and errors only
        shell: bash -l {0}
        run: |
          PYTHONPATH=./open-ce/:./tests/:${PYTHONPATH} \
                  pylint \
                    --disable=R,C,protected-access \
                    ./tests/*.py \
                    ./tests/**/*.py
      - name: Lint config files
        shell: bash -l {0}
        run: |
          # Use yamllint to check the actual yaml files.
          yamllint .github/actions/*/*.yml .github/workflows/*.yml
          yamllint ./conda_build_config.yaml
          # Use the conda_build api to lint the env files since they use jinja.
          python ./open-ce/validate_env.py envs/*.yaml
          # Validate conda_build_config for the main open-ce env file.
          python ./open-ce/validate_config.py --conda_build_config \
                                                 ./conda_build_config.yaml \
                                                 ./envs/*-env.yaml \
                                                 --python_versions 3.6,3.7 \
                                                 --build_types cuda,cpu
      - name: Test with pytest and Generate coverage report
        shell: bash -l {0}
        run: |
          pytest tests/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          directory: ./
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./codecov_report.gz
