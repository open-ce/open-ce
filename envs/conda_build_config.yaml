abseil_cpp:
  - 20210324
absl_py:
  - 0.12.* # [not s390x]
  - 0.15.* # [s390x]
arrow:
  - 5.0.0
astunparse:
  - 1.6
attrs:
  - 21
autoconf:
  - 2.69
automake:
  - 1.16
av:
  - 8.*
bazel:
  - 3.7.*
boost:
  - 1.67.0  # [not s390x]
  - 1.65.*  # [s390x]
boost_mp11:
  - 1.76.*
c_compiler_version:
  - 7.5.*                      # [x86_64]
  - 7.3.*                      # [ppc64le]
  - 9.3.*                      # [s390x]
catalogue:
  - 2.*
cffi:
  - 1.14.*  # [not s390x]
  - 1.15.*  # [s390x]
clang:
  - 10.0.*
click:
  - 8.*
cli11:
  - 2.1.2
cloudpickle:
  - 1.6.*
cmake:
  - 3.19.*   # [not s390x]
  - 3.18.*   # [s390x]
contextvars:
  - 2.4
coverage:
  - 5.*
cpp_filesystem:
  - 1.5.8
cudnn:
  - 8.1.1.*    # [(cudatoolkit == '11.0') or (cudatoolkit == '11.2')]
  - 8.0.5.*    # [cudatoolkit == '10.2']
cxx_compiler_version:
  - 7.5.*                      # [x86_64]
  - 7.3.*                      # [ppc64le]
  - 9.3.*                      # [s390x]
cxxfilt:
  - 0.2.*
cymem:
  - 2.0.*
cython:
  - 0.29
cython_blis:
  - 0.7.*
dm_tree:
  - 0.1.*
eigen:
  - 3.3.7
ffmpeg:
  - 4.2.*
flatbuffers:
  - 2.0
freetype:
  - 2
fortran_compiler_version:
  - 7.5.*                      # [x86_64]
  - 7.3.*                      # [ppc64le]
fsspec:
  - 2021.*
future:
  - 0.18.*
gast:
  - 0.4.0
git:
  - 2.15    #[not s390x]
  - 2.34.*  #[s390x]
google_auth:
  - 1.*
google_auth_oauthlib:
  - 0.4.*
google_pasta:
  - 0.2
googleapis_common_protos:
  - 1.52.*
gmock:
  - 1.10.0
grpc_cpp:
  - 1.41.*
grpcio:
  - 1.42.*
harfbuzz:
  - 1.8   #[not s390x]
  - 4.3   #[s390x]
# Note: hdf5 version must be compatible with h5py
hdf5:
  - 1.10.6
hypothesis:
  - 5.*
h5py:
  - 3.2.*  #[not s390x]
  - 3.6.*  #[s390x]
icu:
  - 58.*   #[not s390x]
  - 68.*   #[s390x]
importlib_resources:
  - 5.*
jasper:
  - 2.0.14
joblib:
  - 0.17
jpeg:
  - 9b
jpegturbo:
  - 2.1.0
keras_applications:
  - 1.0.8
keras_preprocessing:
  - 1.1.*
keras:
  - 2.7.*
leveldb:
  - 1.20.*
libiconv:
  - 1.16
libdate:
  - 3.*
libevent:
  - 2.1.*
libgcc:
  - 9.1.*                      # [x86_64 and c_compiler_version == "7.2.*"]
  - 8.2.*                      # [ppc64le]
  - 9.3.*                      # [s390x]
libstdcxx:
  - 9.1.*                      # [x86_64 and c_compiler_version == "7.2.*"]
  - 8.2.*                      # [ppc64le]
  - 9.3.*                      # [s390x]
libgfortran:
  - 7.2.*                      # [x86_64 and c_compiler_version == "7.2.*"]
  - 7.3.*                      # [ppc64le]
libogg:
  - 1.3.*
libopus:
  - 1.3.*
libpng:
  - 1.6
libtar:
  - 1.2.*
libtiff:
  - 4.2
libtool:
  - 2.4.6
libsolv:
  - 0.7.*
libvorbis:
  - 1.3.7
lmdb:
  - 0.9.*
magma:
  - 2.5.4.*
make:
  - 4.2.1
markdown:
  - 3.3.3
mock:
  - 3.*      # [not s390x]
  - 4.*      # [s390x]
murmurhash:
  - 1.0.*
nasm:                          # [x86_64]
  - 2.13.03                    # [x86_64]
networkx:
  - 2.*
ninja:
  - 1.10.*
nccl:
  - 2.11.*
nlohmann_json:
  - 3.*
numactl:
  - 2.0.*
numpy:
  - 1.20.*               # [not s390x]
  - 1.20.*|1.21.*|1.22.* # [s390x]
onnx:
  - 1.10.*
onnxconverter_common:
  - 1.9.*
onnx_graphsurgeon:
  - 0.2.*
openblas:
  - 0.3.18.*
opencv:
  - 4.5.*
openjdk:
  - 8.0.152                    # [x86_64]
  - 1.8.0                      # [ppc64le]
openmpi:
  - 4.1.1
optional_lite:
  - 3.4.*
opt_einsum:
  - 3.3.0
pathy:
  - 0.5.*
pip:
  - 21.*
#pkg_config is not working here with ffmpeg recipe, so updated to pkgconfig
pkgconfig:
  - 0.29.2
preshed:
  - 3.0.*
protobuf:
  - 3.19.*
psutil:
  - 5
pybind11:
  - 2.9.*
#forbid version 1.8.1 due to security vulnerability
pydantic:
  - 1.8.2
pytest:
  - 5.*   # [not s390x]
  - 6.*   # [s390x]
python:
  - 3.7   # [not s390x]
  - 3.8   # [not s390x]
  - 3.9
pytorch:
  - 1.10.*
pytorch_lightning:
  - 1.6.*
pyyaml:
  - 5.*   # [not s390x]
  - 6.*   # [s390x]
requests:
  - 2.*
regex:
  - 2020.11.*
reproc_cpp:
  - 14.2.*
rust:
  - 1.54.0
rust_compiler_version:
  - '1.46'
safeint:
  - 3.0
scipy:
  - 1.*
sentencepiece:
  - 0.1.96
setuptools:
  - 58.*
setuptools_rust:
  - 0.12.*
six:
  - 1.15.0  # [not s390x]
  - 1.16.0  # [s390x]
smart_open:
  - 2.2.*
spacy_legacy:
  - 3.0.8
spacy_loggers:
  - 1.0.1
spdlog:
  - 1.9.2
srsly:
  - 2.*
sqlite:
  - 3.38.2   # [s390x]
tabulate:
  - 0.8.*
tensorboard:
  - 2.7.*
tensorboard_data_server:
  - 0.6.*
tensorboard_plugin_wit:
  - 1.6
tensorflow:
  - 2.7.*
tensorflow_hub:
  - 0.12
tensorflow_io_gcs_filesystem:
  - 0.23.*
termcolor:
  - 1.1.0
termcolor_cpp:
  - 2.0.0
thinc:
  - 8.0.*
tokenizers:
  - 0.10.3
torchmetrics:
  - 0.8.*
torchtext:
  - 0.11.*
torchvision:
  - 0.11.*
tqdm:
  - 4.*
typer:
  - 0.4.0
typing_extensions:
  - 4.1.*
unzip:
  - 6.0
wasabi:
  - 0.8.*
werkzeug:
  - 2.*
wrapt:
  - 1.12.*
yaml_cpp:
  - 0.6.3
zlib:
  - 1.2.11
zstd:
  - 1.4.*

##
## ARCHITECTURE SPECIFIC OPTIMIZATION SETTINGS
##
## CPU and vector instruction enablement
## =====================================
## These are settings and arguments to pass to GCC for
## optimization settings specific to the target CPU architecture
##
ppc_arch:
  - p9
cpu_opt_arch:
  - sandybridge             # [x86_64]
  - power8                  # [ppc64le]
  - z14                     # [s390x]
cpu_opt_tune:
  - haswell                 # [x86_64]
  - power9                  # [ppc64le]
  - z14                     # [s390x]
vector_settings:
  - avx, sse4.1, sse4.2     # [x86_64]
  - vsx                     # [ppc64le]
  - zvector                 # [s390x]

## GPU/CUDA Specifics
## =====================================
##
## CUDA Capability Level
## More information on Capability Levels found at:
##  https://developer.nvidia.com/cuda-gpus
##
## In TensorFlow 2.3 and later, we can now designate which
## architectures to include PTX code for:
##     - compute_<cuda_arch> : include PTX
##     - sm_<cuda_arch> : do not include PTX
## These are passed in to the build via the
## `cuda_level_details` define.
##
## Since CUBINs are compatible within the same major architecture,
## this allows us to ship PTX for only the latest supported level to
## enable PTX JIT for future architectures.
##
## Other packages just take in base cuda capability levels as listed
## in the `cuda_levels` define.
##
# yamllint disable rule:line-length
cuda_levels:
  - 3.7,5.2,6.0,7.0,7.5         # [x86_64 and cudatoolkit == '10.2']
  - 3.7,5.2,6.0,7.0,7.5,8.0     # [x86_64 and (cudatoolkit == '11.0' or cudatoolkit == '11.2')]
  - 3.7,6.0,7.0,7.5             # [ppc64le and cudatoolkit == '10.2']
  - 3.7,6.0,7.0,7.5,8.0         # [ppc64le and (cudatoolkit == '11.0' or cudatoolkit == '11.2')]
cuda_levels_details:
  - sm_37,sm_52,sm_60,sm_61,sm_70,sm_75,compute_75        # [x86_64 and cudatoolkit == '10.2']
  - sm_37,sm_52,sm_60,sm_61,sm_70,sm_75,sm_80,compute_80  # [x86_64 and (cudatoolkit == '11.0' or cudatoolkit == '11.2')]
  - sm_37,sm_60,sm_70,sm_75,compute_75                    # [ppc64le and cudatoolkit == '10.2']
  - sm_37,sm_60,sm_70,sm_75,sm_80,compute_80              # [ppc64le and (cudatoolkit == '11.0' or cudatoolkit == '11.2')]
