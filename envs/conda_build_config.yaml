abseil_cpp:
  - 20230125.0
absl_py:
  - 1.2.*
array_record:
  - 0.2.*
arviz:
  - 0.14.0
arrow:
  - 11.0.0
astunparse:
  - 1.6
attrs:
  - 21
autoconf:
  - 2.69
automake:
  - 1.16
av:
  - 10.*
bazel:
  - 5.*
black:
  - 22.*
bsddb3:
  - 6.2.9
boost:
  - 1.67.0  # [not s390x]
  - 1.65.*  # [s390x]
boost_mp11:
  - 1.76.*
c_compiler_version:
  - 7.5.*                      # [x86_64 and cudatoolkit == '11.2']
  - 7.3.*                      # [ppc64le and cudatoolkit == '11.2']
  - 11.2.*                     # [build_type == 'cpu' or cudatoolkit == '11.8']
catalogue:
  - 2.*
cffi:
  - 1.15.*  # [not s390x]
  - 1.15.*  # [s390x]
clang:
  - 14.0.*
click:
  - 8.*
cli11:
  - 2.1.2
cloudpickle:
  - 2.*
cmake:
  - 3.19.*   # [not s390x]
  - 3.18.*   # [s390x]
contextvars:
  - 2.4
coverage:
  - 5.*
cpp_filesystem:
  - 1.5.*
cudnn:
  - 8.8.*    # [build_type == 'cuda']
cxx_compiler_version:
  - 7.5.*                      # [x86_64 and cudatoolkit == '11.2']
  - 7.3.*                      # [ppc64le and cudatoolkit == '11.2']
  - 11.2.*                     # [build_type == 'cpu' or cudatoolkit == '11.8']
cxxfilt:
  - 0.2.*
cymem:
  - 2.0.*
cython:
  - 0.29
cython_blis:
  - 0.7.*
dm_tree:
  - 0.1.*
eigen:
  - 3.4.*
ffmpeg:
  - 4.2.*
flatbuffers:
  - 2.0.*
fmt:
  - 9.1.0
freetype:
  - 2
fortran_compiler_version:
  - 7.5.*                      # [x86_64 and cudatoolkit == '11.2']
  - 7.3.*                      # [ppc64le and cudatoolkit == '11.2']
  - 11.2.*                     # [build_type == 'cpu' or cudatoolkit == '11.8']
fsspec:
  - 2022.11.*
future:
  - 0.18.*
gast:
  - 0.4.0
git:
  - 2.34
google_auth:
  - 2.*
google_auth_oauthlib:
  - 0.5.*
google_pasta:
  - 0.2
googleapis_common_protos:
  - 1.*
googledrivedownloader:
  - 0.4
gmock:
  - 1.13
grpc_cpp:
  - 1.41.*
grpcio:
  - 1.51.*
harfbuzz:
  - 4.3.*
# Note: hdf5 version must be compatible with h5py
hdf5:
  - 1.10.6
hypothesis:
  - 5.*
h5py:
  - 3.7.*
icu:
  - 58.*   #[not s390x]
  - 68.*   #[s390x]
importlib_resources:
  - 5.*
jasper:
  - 2.0.14
jax:
  - 0.4.7
joblib:
  - 1.*
jpeg:
  - 9e
jpegturbo:
  - 2.1.4
keras_applications:
  - 1.0.8
keras_preprocessing:
  - 1.1.*
keras:
  - 2.12.*
leveldb:
  - 1.23.*
libiconv:
  - 1.16
libdate:
  - 3.*
libevent:
  - 2.1.*
libgcc:
  - 9.1.*                      # [x86_64 and cudatoolkit == '11.2']
  - 8.2.*                      # [ppc64le]
  - 9.3.*                      # [s390x]
libstdcxx:
  - 9.1.*                      # [x86_64 and cudatoolkit == '11.2']
  - 8.2.*                      # [ppc64le]
  - 9.3.*                      # [s390x]
libgfortran:
  - 7.5.*                      # [x86_64 and cudatoolkit == '11.2']
  - 7.3.*                      # [ppc64le]
  - 7.5.*                      # [s390x]
libogg:
  - 1.3.*
libopus:
  - 1.3.*
libpng:
  - 1.6
libprotobuf:
  - 3.21.12
libtar:
  - 1.2.*
libtiff:
  - 4.2
libtool:
  - 2.4.6
libsolv:
  - 0.7.*
libvorbis:
  - 1.3.7
lmdb:
  - 0.9.*
magma:
  - 2.6.*
make:
  - 4.2.1
markdown:
  - 3.3.*
mock:
  - 3.*      # [not s390x]
  - 4.*      # [s390x]
murmurhash:
  - 1.0.*
nasm:                          # [x86_64]
  - 2.13.03                    # [x86_64]
networkx:
  - 2.*
ninja:
  - 1.10.*
nccl:
  - 2.17.*
nlohmann_json:
  - 3.*
numactl:
  - 2.0.*
numpy:
  - 1.22.*   # [cudatoolkit == '11.2']
  - 1.23.5   # [build_type == 'cpu' or cudatoolkit == '11.8']
onnx:
  - 1.13.*
onnxconverter_common:
  - 1.13.*
onnx_graphsurgeon:
  - 0.2.*
openblas:
  - 0.3.23.*
opencv:
  - 4.7.*
openjdk:
  - 11.0.*
openmpi:
  - 4.1.4
optional_lite:
  - 3.4.*
opt_einsum:
  - 3.3.0
pathy:
  - 0.6.*
pip:
  - 21.*
pkg_config:
  - 0.29.2
preshed:
  - 3.0.*
protobuf:
  - 4.21.12
psutil:
  - 5
pybind11:
  - 2.9.*
pydantic:
  - 1.9.*
pytest:
  - 7.*
python:
  - 3.8   # [not s390x]
  - 3.9
  - 3.10
pytorch:
  - 1.10.*               # [cudatoolkit == '11.2']
  - 2.0.*               # [build_type == 'cpu' or cudatoolkit == '11.8']
pytorch_lightning:
  - 2.0.*
pytorch_scatter:
  - 2.1.1
pytorch_sparse:
  - 0.6.17
pyyaml:
  - 6.*
rdflib:
  - 6.1.1
requests:
  - 2.*
regex:
  - 2022.3.*
reproc_cpp:
  - 14.2.*
rust:
  - 1.62.*     # [cudatoolkit == '11.2']
  - 1.65.*     # [build_type == 'cpu' or cudatoolkit == '11.4']
rust_compiler_version:
  - '1.46.0'   # [cudatoolkit == '11.2']
  - '1.65.0'   # [build_type == 'cpu' or cudatoolkit == '11.4']
safeint:
  - 3.0
scipy:
  - 1.10.*
scikit_learn:
  - 1.1.*
sentencepiece:
  - 0.1.98
setuptools:
  - 58.*    # [cudatoolkit == '11.2']
  - 65.*    # [build_type == 'cpu' or cudatoolkit == '11.8']
setuptools_rust:
  - 0.12.*    # [cudatoolkit == '11.2']
  - 1.5.*     # [build_type == 'cpu' or cudatoolkit == '11.8']
six:
  - 1.16.0
smart_open:
  - 2.2.*
spdlog:
  - 1.11.0
srsly:
  - 2.*
starlette:
  - 0.20.*
sqlite:
  - 3.38.*   # [s390x]
tabulate:
  - 0.8.*
tensorboard:
  - 2.12.*
tensorboard_data_server:
  - 0.7.*
tensorboard_plugin_wit:
  - 1.6
tensorflow:
  - 2.12.*
tensorflow_hub:
  - 0.13
tensorflow_io_gcs_filesystem:
  - 0.32.*
termcolor:
  - 1.1.0
termcolor_cpp:
  - 2.0.0
tf_estimator:
  - 2.12.*
torchmetrics:
  - 0.11.*
torchtext:
  - 0.11.*               # [cudatoolkit == '11.2']
  - 0.15.*               # [build_type == 'cpu' or cudatoolkit == '11.8']
torchvision:
  - 0.11.*               # [cudatoolkit == '11.2']
  - 0.15.*               # [build_type == 'cpu' or cudatoolkit == '11.8']
tqdm:
  - 4.*
typer:
  - 0.4.0
typing_extensions:
  - 4.*
unzip:
  - 6.0
wasabi:
  - 0.9.*
werkzeug:
  - 2.*
wrapt:
  - 1.14.*
yaml_cpp:
  - 0.7.0
zlib:
  - 1.2.*
zstd:
  - 1.5.*

##
## ARCHITECTURE SPECIFIC OPTIMIZATION SETTINGS
##
## CPU and vector instruction enablement
## =====================================
## These are settings and arguments to pass to GCC for
## optimization settings specific to the target CPU architecture
##
ppc_arch:
  - p9
cpu_opt_arch:
  - sandybridge             # [x86_64]
  - power8                  # [ppc64le]
  - z14                     # [s390x]
cpu_opt_tune:
  - haswell                 # [x86_64]
  - power9                  # [ppc64le]
  - z14                     # [s390x]
vector_settings:
  - avx, sse4.1, sse4.2     # [x86_64]
  - vsx                     # [ppc64le]
  - zvector                 # [s390x]

## GPU/CUDA Specifics
## =====================================
##
## CUDA Capability Level
## More information on Capability Levels found at:
##  https://developer.nvidia.com/cuda-gpus
##
## In TensorFlow 2.3 and later, we can now designate which
## architectures to include PTX code for:
##     - compute_<cuda_arch> : include PTX
##     - sm_<cuda_arch> : do not include PTX
## These are passed in to the build via the
## `cuda_level_details` define.
##
## Since CUBINs are compatible within the same major architecture,
## this allows us to ship PTX for only the latest supported level to
## enable PTX JIT for future architectures.
##
## Other packages just take in base cuda capability levels as listed
## in the `cuda_levels` define.
##
# yamllint disable rule:line-length
cuda_levels:
  - 6.0,7.0,7.5,8.0             # [x86_64 and cudatoolkit == '11.2']
  - 6.0,7.0,7.5,8.0,8.6,9.0     # [x86_64 and cudatoolkit == '11.8']
  - 6.0,7.0,7.5,8.0                 # [ppc64le and cudatoolkit == '11.2']
  - 6.0,7.0,7.5,8.0,8.6,9.0         # [ppc64le and cudatoolkit == '11.8']
cuda_levels_details:
  - sm_60,sm_61,sm_70,sm_75,sm_80,compute_80                         # [x86_64 and cudatoolkit == '11.2']
  - sm_60,sm_61,sm_70,sm_75,sm_80,sm_86,sm_90,compute_80,compute_86,compute_90   # [x86_64 and cudatoolkit == '11.8']
  - sm_60,sm_70,sm_75,sm_80,compute_80                                     # [ppc64le and cudatoolkit == '11.2']
  - sm_60,sm_70,sm_75,sm_80,sm_86,sm_90,compute_80,compute_86,compute_90               # [ppc64le and cudatoolkit == '11.8']
