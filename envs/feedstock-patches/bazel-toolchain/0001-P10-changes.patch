From 67c41675529055b6b1760bb94373246c54e19bab Mon Sep 17 00:00:00 2001
From: Nishidha Panpaliya <npanpa23@in.ibm.com>
Date: Mon, 8 May 2023 10:58:00 +0000
Subject: [PATCH] P10 changes

---
 .../bazel_toolchain/cc_toolchain_config.bzl   |  6 ++--
 recipe/gen-bazel-toolchain                    | 34 +++++++++++++------
 recipe/meta.yaml                              |  6 ++--
 recipe/run_test.sh                            | 31 +++++++++++++++++
 4 files changed, 60 insertions(+), 17 deletions(-)

diff --git a/recipe/bazel_toolchain/cc_toolchain_config.bzl b/recipe/bazel_toolchain/cc_toolchain_config.bzl
index 41d8796..b4c8719 100644
--- a/recipe/bazel_toolchain/cc_toolchain_config.bzl
+++ b/recipe/bazel_toolchain/cc_toolchain_config.bzl
@@ -30,11 +30,11 @@ def _impl(ctx):
         ),
         tool_path(
             name = "cpp",
-            path = "/usr/bin/cpp",
+            path = "${CPP}",
         ),
         tool_path(
             name = "gcov",
-            path = "/usr/bin/gcov",
+            path = "${GCOV}",
         ),
         tool_path(
             name = "nm",
@@ -313,7 +313,7 @@ def _impl(ctx):
         if (len("${CUDA_HOME}")):
             cxx_builtin_include_directories.append("${CUDA_HOME}/include")
             cxx_builtin_include_directories.append("${CUDA_HOME}/targets/x86_64-linux/include/")
-        if ("${PPC_ARCH}" == 'p10'):
+        if ("${PPC_ARCH}" == "p10"):
             cxx_builtin_include_directories.append("${GCC_11_HOME}/lib/gcc/ppc64le-redhat-linux/11/include")
             cxx_builtin_include_directories.append("${GCC_11_HOME}/include")
             cxx_builtin_include_directories.append("${GCC_11_HOME}/include/c++/11")
diff --git a/recipe/gen-bazel-toolchain b/recipe/gen-bazel-toolchain
index 09f868b..77d22a6 100755
--- a/recipe/gen-bazel-toolchain
+++ b/recipe/gen-bazel-toolchain
@@ -123,7 +123,16 @@ pushd bazel_toolchain
 
   HOST_PREFIX=${PREFIX}
   sed -ie "s:\${PPC_ARCH}:${ppc_arch}:" cc_toolchain_config.bzl
-  sed -ie "s:\${GCC_11_HOME}:${GCC_11_HOME}:" cc_toolchain_config.bzl
+
+  if [[ "${ppc_arch}" == 'p10' ]]; then
+      sed -ie "s:\${GCC_11_HOME}:${GCC_11_HOME}:" cc_toolchain_config.bzl
+      sed -ie "s:\${CPP}:${GCC_11_HOME}/bin/cpp:" cc_toolchain_config.bzl
+      sed -ie "s:\${GCOV}:${GCC_11_HOME}/bin/gcov:" cc_toolchain_config.bzl
+#      export CONDA_BUILD_SYSROOT=$PREFIX/powerpc64le-conda-linux-gnu/sysroot
+  else
+      sed -ie "s:\${CPP}:/usr/bin/cpp:" cc_toolchain_config.bzl
+      sed -ie "s:\${GCOV}:/usr/bin/gcov:" cc_toolchain_config.bzl
+  fi
   cp cc_toolchain_config.bzl cc_toolchain_build_config.bzl
   apply_cc_template cc_toolchain_config.bzl
   apply_cc_template crosstool_wrapper_driver_is_not_gcc
@@ -131,21 +140,24 @@ pushd bazel_toolchain
     if [[ "${build_platform}" != "${target_platform}" ]]; then
       if [[ "${target_platform}" == osx-* ]]; then
         BAZEL_TOOLCHAIN_GCC=cc_wrapper_build.sh
-      else
+      elif [[ "${ppc_arch}" == 'p9' ]]; then
         BAZEL_TOOLCHAIN_GCC=${BAZEL_TOOLCHAIN_GCC//${HOST}/${BUILD}}
+        PREFIX=${CONDA_PREFIX}
+        LD=${LD//${HOST}/${BUILD}}
+        CFLAGS=${CFLAGS//${HOST_PREFIX}/${CONDA_PREFIX}}
+        CPPFLAGS=${CPPFLAGS//${HOST_PREFIX}/${CONDA_PREFIX}}
+        CXXFLAGS=${CXXFLAGS//${HOST_PREFIX}/${CONDA_PREFIX}}
+        LDFLAGS=${LDFLAGS//${HOST_PREFIX}/${CONDA_PREFIX}}
+        NM=${NM//${HOST}/${BUILD}}
+        STRIP=${STRIP//${HOST}/${BUILD}}
+        BAZEL_TOOLCHAIN_AR=${BAZEL_TOOLCHAIN_AR//${HOST}/${BUILD}}
+        HOST=${BUILD}
+      else
+        BAZEL_TOOLCHAIN_GCC=${GCC_11_HOME}/bin/gcc 
       fi
       TARGET_CPU=${BUILD_CPU}
       TARGET_SYSTEM=${BUILD_SYSTEM}
       target_platform=${build_platform}
-      PREFIX=${CONDA_PREFIX}
-      LD=${LD//${HOST}/${BUILD}}
-      CFLAGS=${CFLAGS//${HOST_PREFIX}/${CONDA_PREFIX}}
-      CPPFLAGS=${CPPFLAGS//${HOST_PREFIX}/${CONDA_PREFIX}}
-      CXXFLAGS=${CXXFLAGS//${HOST_PREFIX}/${CONDA_PREFIX}}
-      LDFLAGS=${LDFLAGS//${HOST_PREFIX}/${CONDA_PREFIX}}
-      NM=${NM//${HOST}/${BUILD}}
-      STRIP=${STRIP//${HOST}/${BUILD}}
-      BAZEL_TOOLCHAIN_AR=${BAZEL_TOOLCHAIN_AR//${HOST}/${BUILD}}
       HOST=${BUILD}
     fi
     apply_cc_template cc_toolchain_build_config.bzl
diff --git a/recipe/meta.yaml b/recipe/meta.yaml
index f9da0d8..d2d87ee 100644
--- a/recipe/meta.yaml
+++ b/recipe/meta.yaml
@@ -20,9 +20,9 @@ requirements:
 
 test:
   requires:
-    - {{ compiler('c') }}
-    - {{ compiler('cxx') }}
-    - bazel
+    - {{ compiler('c') }}         #[ppc_arch != 'p10']
+    - {{ compiler('cxx') }}       #[ppc_arch != 'p10']
+    - bazel {{ bazel }}
 
 about:
   home: https://github.com/conda-forge/bazel-toolchain-feedstock
diff --git a/recipe/run_test.sh b/recipe/run_test.sh
index 97fb190..f36695f 100644
--- a/recipe/run_test.sh
+++ b/recipe/run_test.sh
@@ -5,5 +5,36 @@ set -exuo pipefail
 cp -r ${RECIPE_DIR}/tutorial .
 cd tutorial
 
+
+if [[ $ppc_arch == "p10" ]]
+then
+    if [[ -z "${GCC_11_HOME}" ]];
+    then
+        echo "Please set GCC_11_HOME to the install path of gcc-toolset-11"
+        exit 1
+    else
+        export PATH=$GCC_11_HOME/bin:$PATH
+        export CC=$GCC_11_HOME/bin/gcc
+        export CXX=$GCC_11_HOME/bin/g++
+        export GCC=$CC
+        export GXX=$CXX
+        export AR=${GCC_11_HOME}/bin/ar
+        export LD=${GCC_11_HOME}/bin/ld.bfd
+        export NM=${GCC_11_HOME}/bin/nm
+        export OBJCOPY=${GCC_11_HOME}/bin/objcopy
+        export OBJDUMP=${GCC_11_HOME}/bin/objdump
+        export RANLIB=${GCC_11_HOME}/bin/ranlib
+        export STRIP=${GCC_11_HOME}/bin/strip
+        export READELF=${GCC_11_HOME}/bin/readelf
+        export HOST=powerpc64le-conda_cos7-linux-gnu
+        export BAZEL_LINKLIBS=-l%:libstdc++.a
+        export LDFLAGS="-L${GCC_11_HOME}/lib -L$PREFIX/lib -L$BUILD_PREFIX/lib"
+        export CFLAGS="-mcpu=power9 -mtune=power10"
+        export CXXFLAGS="-mcpu=power9 -mtune=power10"
+        export CPPFLAGS="-mcpu=power9 -mtune=power10"
+        export CONDA_BUILD_SYSROOT=""
+    fi
+fi
+
 source gen-bazel-toolchain
 bazel build --logging=6 --subcommands --verbose_failures --crosstool_top=//bazel_toolchain:toolchain --cpu ${TARGET_CPU} //main:hello-world 
-- 
2.34.1

