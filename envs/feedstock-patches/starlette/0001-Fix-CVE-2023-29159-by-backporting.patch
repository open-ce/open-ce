From ca972833e634d50bdc787af74d1f6c776b1efa78 Mon Sep 17 00:00:00 2001
From: Archana-Shinde1 <Archana-Shinde1@ibm.com>
Date: Tue, 21 May 2024 07:22:12 +0000
Subject: [PATCH] Fix CVE-2023-29159 by backporting

---
 recipe/0001-Fix-CVE-2023-29159.patch | 95 ++++++++++++++++++++++++++++
 recipe/meta.yaml                     |  6 +-
 2 files changed, 99 insertions(+), 2 deletions(-)
 create mode 100644 recipe/0001-Fix-CVE-2023-29159.patch

diff --git a/recipe/0001-Fix-CVE-2023-29159.patch b/recipe/0001-Fix-CVE-2023-29159.patch
new file mode 100644
index 0000000..02f60ae
--- /dev/null
+++ b/recipe/0001-Fix-CVE-2023-29159.patch
@@ -0,0 +1,95 @@
+From 376b39427873d55bcffa716a0c62f6dc216ce6d5 Mon Sep 17 00:00:00 2001
+From: Archana-Shinde1 <Archana-Shinde1@ibm.com>
+Date: Tue, 21 May 2024 06:10:21 +0000
+Subject: [PATCH] CVE
+
+---
+ starlette/staticfiles.py  |  2 +-
+ tests/test_staticfiles.py | 43 +++++++++++++++++++++++++++++++++------
+ 2 files changed, 38 insertions(+), 7 deletions(-)
+
+diff --git a/starlette/staticfiles.py b/starlette/staticfiles.py
+index 4d075b3..4c85606 100644
+--- a/starlette/staticfiles.py
++++ b/starlette/staticfiles.py
+@@ -169,7 +169,7 @@ class StaticFiles:
+             else:
+                 full_path = os.path.realpath(joined_path)
+             directory = os.path.realpath(directory)
+-            if os.path.commonprefix([full_path, directory]) != directory:
++            if os.path.commonpath([full_path, directory]) != directory:
+                 # Don't allow misbehaving clients to break out of the static files
+                 # directory.
+                 continue
+diff --git a/tests/test_staticfiles.py b/tests/test_staticfiles.py
+index eb6c73f..6129737 100644
+--- a/tests/test_staticfiles.py
++++ b/tests/test_staticfiles.py
+@@ -1,8 +1,8 @@
+ import os
+-import pathlib
+ import stat
+ import tempfile
+ import time
++from pathlib import Path
+ 
+ import anyio
+ import pytest
+@@ -27,14 +27,12 @@ def test_staticfiles(tmpdir, test_client_factory):
+     assert response.status_code == 200
+     assert response.text == "<file content>"
+ 
+-
+-def test_staticfiles_with_pathlib(tmpdir, test_client_factory):
+-    base_dir = pathlib.Path(tmpdir)
+-    path = base_dir / "example.txt"
++def test_staticfiles_with_pathlib(tmp_path: Path, test_client_factory):
++    path = tmp_path / "example.txt"
+     with open(path, "w") as file:
+         file.write("<file content>")
+ 
+-    app = StaticFiles(directory=base_dir)
++    app = StaticFiles(directory=tmp_path)
+     client = test_client_factory(app)
+     response = client.get("/example.txt")
+     assert response.status_code == 200
+@@ -516,3 +514,36 @@ def test_staticfiles_disallows_path_traversal_with_symlinks(tmpdir):
+ 
+     assert exc_info.value.status_code == 404
+     assert exc_info.value.detail == "Not Found"
++
++
++def test_staticfiles_avoids_path_traversal(tmp_path: Path):
++    statics_path = tmp_path / "static"
++    statics_disallow_path = tmp_path / "static_disallow"
++
++    statics_path.mkdir()
++    statics_disallow_path.mkdir()
++
++    static_index_file = statics_path / "index.html"
++    statics_disallow_path_index_file = statics_disallow_path / "index.html"
++    static_file = tmp_path / "static1.txt"
++
++    static_index_file.write_text("<h1>Hello</h1>")
++    statics_disallow_path_index_file.write_text("<h1>Private</h1>")
++    static_file.write_text("Private")
++
++    app = StaticFiles(directory=statics_path)
++
++    # We can't test this with 'httpx', so we test the app directly here.
++    path = app.get_path({"path": "/../static1.txt"})
++    with pytest.raises(HTTPException) as exc_info:
++        anyio.run(app.get_response, path, {"method": "GET"})
++
++    assert exc_info.value.status_code == 404
++    assert exc_info.value.detail == "Not Found"
++
++    path = app.get_path({"path": "/../static_disallow/index.html"})
++    with pytest.raises(HTTPException) as exc_info:
++        anyio.run(app.get_response, path, {"method": "GET"})
++
++    assert exc_info.value.status_code == 404
++    assert exc_info.value.detail == "Not Found"
+-- 
+2.40.1
+
diff --git a/recipe/meta.yaml b/recipe/meta.yaml
index fe1c964..43b69b2 100644
--- a/recipe/meta.yaml
+++ b/recipe/meta.yaml
@@ -6,8 +6,10 @@ package:
   version: {{ version }}
 
 source:
-  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
-  sha256: 854c71e73736c429c2bdb07801f2c76c9cba497e7c3cf4988fde5e95fe4cdb3c
+  url: https://github.com/encode/{{name}}/archive/refs/tags/{{ version }}.tar.gz
+  sha256: 9e8b6f48caffe2099f29c8af97be9461ead2caa532695b2558d549f7f38113de
+  patches:
+    - 0001-Fix-CVE-2023-29159.patch
 
 build:
   number: 0
-- 
2.40.1

