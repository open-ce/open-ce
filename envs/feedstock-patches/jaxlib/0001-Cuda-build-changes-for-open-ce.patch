From 78603f9845f20e3ae289baa61eabff8c6073f04f Mon Sep 17 00:00:00 2001
From: Nishidha Panpaliya <npanpa23in.ibm.com>
Date: Thu, 20 Apr 2023 17:25:18 +0000
Subject: [PATCH] Cuda build changes

---
 recipe/build.sh                | 17 +++++++++--------
 recipe/conda_build_config.yaml |  5 ++++-
 recipe/meta.yaml               |  5 ++++-
 3 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/recipe/build.sh b/recipe/build.sh
index 7a554b2..9c65afc 100644
--- a/recipe/build.sh
+++ b/recipe/build.sh
@@ -42,23 +42,24 @@ if [[ "${cuda_compiler_version:-None}" != "None" ]]; then
         export TF_CUDA_COMPUTE_CAPABILITIES=sm_35,sm_50,sm_60,sm_62,sm_70,sm_72,sm_75,sm_80,compute_80
     elif [[ ${cuda_compiler_version} == 11.1 ]]; then
         export TF_CUDA_COMPUTE_CAPABILITIES=sm_35,sm_50,sm_60,sm_62,sm_70,sm_72,sm_75,sm_80,sm_86,compute_86
-    elif [[ ${cuda_compiler_version} == 11.2 ]]; then
-        export TF_CUDA_COMPUTE_CAPABILITIES=sm_35,sm_50,sm_60,sm_62,sm_70,sm_72,sm_75,sm_80,sm_86,compute_86
+    elif [[ ${cuda_compiler_version} == 11.2 || ${cuda_compiler_version} == 11.8 ]]; then
+        export TF_CUDA_COMPUTE_CAPABILITIES="${cuda_levels_details}"
     else
         echo "unsupported cuda version."
         exit 1
     fi
 
     export TF_CUDA_VERSION="${cuda_compiler_version}"
-    export TF_CUDNN_VERSION="${cudnn}"
-    export TF_CUDA_PATHS="${PREFIX},${CUDA_HOME}"
+    export TF_CUDNN_VERSION="8.8.1"
+    export TF_CUDA_PATHS="${CUDA_HOME},${PREFIX},/usr/include"
     export TF_NEED_CUDA=1
     export TF_NCCL_VERSION=$(pkg-config nccl --modversion | grep -Po '\d+\.\d+')
-
+    export CUDNN_INSTALL_PATH="${PREFIX}"
+    export NCCL_INSTALL_PATH="${PREFIX}"
     CUDA_ARGS="--enable_cuda \
                --enable_nccl \
-               --cuda_path=$CUDA_HOME \
-               --cudnn_path=$PREFIX   \
+               --cuda_path=${CUDA_HOME} \
+               --cudnn_path=${PREFIX}   \
                --cuda_compute_capabilities=$TF_CUDA_COMPUTE_CAPABILITIES \
                --cuda_version=$TF_CUDA_VERSION \
                --cudnn_version=$TF_CUDNN_VERSION"
@@ -74,7 +75,7 @@ export TF_SYSTEM_LIBS="boringssl,com_github_googlecloudplatform_google_cloud_cpp
 if [[ "${target_platform}" == "osx-arm64" ]]; then
   ${PYTHON} build/build.py --target_cpu_features default --enable_mkl_dnn --target_cpu ${TARGET_CPU}
 else
-  ${PYTHON} build/build.py --target_cpu_features default --enable_mkl_dnn ${CUDA_ARGS:-}
+  ${PYTHON} build/build.py --target_cpu_features default --enable_mkl_dnn ${CUDA_ARGS:-} --bazel_startup_options="--bazelrc=$SRC_DIR/.jax_configure.bazelrc"
 fi
 
 # Clean up to speedup postprocessing
diff --git a/recipe/conda_build_config.yaml b/recipe/conda_build_config.yaml
index 871eeca..310f166 100644
--- a/recipe/conda_build_config.yaml
+++ b/recipe/conda_build_config.yaml
@@ -6,4 +6,7 @@ cuda_compiler_version:
   - "None"                   # [build_type == 'cpu']
   - "11.2"                   # [cudatoolkit == '11.2']
   - "11.8"                   # [cudatoolkit == '11.8']
-
+cuda_compiler:
+  - nvcc
+cudnn:
+  - 8.8.1
diff --git a/recipe/meta.yaml b/recipe/meta.yaml
index e91a49a..1d09ede 100644
--- a/recipe/meta.yaml
+++ b/recipe/meta.yaml
@@ -25,6 +25,8 @@ build:
   skip: true  # [cuda_compiler_version in ("10.2", "11.0", "11.1")]
   string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
   string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
+  script_env:
+    - CUDA_HOME
 
 requirements:
   build:
@@ -66,7 +68,7 @@ requirements:
     - re2
     - c-ares
     - ml_dtypes >=0.0.3
-    - __cuda  # [cuda_compiler_version != "None"]
+    #- __cuda  # [cuda_compiler_version != "None"]
   run_constrained:
     - jax >={{ version }}
     - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}  # [osx]
@@ -76,6 +78,7 @@ test:
     - test_jaxlib.py
   requires:
     - pip
+    - nccl {{ nccl }}
   commands:
     - pip check
     - python test_jaxlib.py
-- 
2.34.1

