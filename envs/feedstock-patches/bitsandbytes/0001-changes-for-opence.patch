From 7a8bb3d85c116030207987d6f67dd9cb6c39018e Mon Sep 17 00:00:00 2001
From: Deepali Chourasia <deepch23@in.ibm.com>
Date: Tue, 24 Sep 2024 06:59:24 +0000
Subject: [PATCH] changes for opence

---
 recipe/build.sh                |  4 ++--
 recipe/conda_build_config.yaml |  3 +++
 recipe/meta.yaml               | 37 +++++++++++++++-------------------
 3 files changed, 21 insertions(+), 23 deletions(-)
 create mode 100644 recipe/conda_build_config.yaml

diff --git a/recipe/build.sh b/recipe/build.sh
index ed3901c..7e20d14 100644
--- a/recipe/build.sh
+++ b/recipe/build.sh
@@ -16,7 +16,7 @@ popd
 
 # CUDA enabled build. This will create libbitsandbytes_cuda.so
 # Even in a CUDA build we will still bundle the _cpu.so as a fallback if no GPUs are available
-if [[ "${cuda_compiler_version:-None}" != "None" ]]; then
+if [[ "${cudatoolkit:-None}" != "None" ]]; then
   mkdir -p build/cuda
   pushd build/cuda
   cmake ${CMAKE_ARGS} -DCOMPUTE_BACKEND=cuda -GNinja ../..
@@ -26,4 +26,4 @@ fi
 
 # This will automatically pull in all .so files we've built
 # on a CPU only build this will only be one .so, on CUDA both the CPU and CUDA variants
-pip install --no-deps --no-build-isolation -vvv .
+${PYTHON} -m pip install --no-deps --no-build-isolation -vvv .
diff --git a/recipe/conda_build_config.yaml b/recipe/conda_build_config.yaml
new file mode 100644
index 0000000..a009eb8
--- /dev/null
+++ b/recipe/conda_build_config.yaml
@@ -0,0 +1,3 @@
+cuda_compiler:
+- nvcc
+
diff --git a/recipe/meta.yaml b/recipe/meta.yaml
index 25d7a23..2aeac76 100644
--- a/recipe/meta.yaml
+++ b/recipe/meta.yaml
@@ -1,5 +1,5 @@
 {% set name = "bitsandbytes" %}
-{% set version = "0.43.3" %}
+{% set version = "0.44.0" %}
 
 package:
   name: {{ name|lower }}
@@ -7,37 +7,32 @@ package:
 
 source:
   # Don't use the PyPI source tarball as this already contains compiled code.
-  url: https://github.com/bitsandbytes-foundation/bitsandbytes/archive/refs/tags/{{ version }}.tar.gz
-  sha256: 7a468bc977da19c176cc578954bfd7a3c64182f387a6849e9f0a38d5cba1b4df
+  url: https://github.com/bitsandbytes-foundation/bitsandbytes/archive/refs/tags/v{{ version }}.tar.gz
+  sha256: 1780a313e76697facaa48e98db06799911f25c4d681eb63686c8b916c52fca95
 
 build:
-  number: 2
-  string: cuda{{ cuda_compiler_version | replace('.', '') }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
-  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
-  skip: true  # [not linux]
-  skip: true  # [cuda_compiler_version == "10.2"]
+  number: 1
+  string: cuda{{ cudatoolkit | replace('.', '') }}_{{ python | replace(".", "") }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  #[build_type == 'cuda']
+  string: cpu_py{{ python | replace(".", "") }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  #[build_type == 'cpu']
 
 requirements:
   build:
     - {{ compiler('c') }}
-    - {{ stdlib('c') }}
+#    - {{ stdlib('c') }}
     - {{ compiler('cxx') }}
-    - {{ compiler("cuda") }}                 # [cuda_compiler_version != "None"]
+    - {{ compiler("cuda") }}                #[build_type == 'cuda']
     - cmake
     - ninja
   host:
-    - python
-    - pip
-    - setuptools
-    - cuda-cudart-dev   # [(cuda_compiler_version or "").startswith("12")]
-    - libcublas-dev     # [(cuda_compiler_version or "").startswith("12")]
-    - libcusparse-dev   # [(cuda_compiler_version or "").startswith("12")]
-    - cuda-version  {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
-    - scipy
+    - python {{ python }}
+    - pip {{ pip }}
+    - setuptools  {{ setuptools }}
+    - cudatoolkit {{ cudatoolkit }}    #[build_type == 'cuda']
+    - scipy {{ scipy }}
   run:
-    - python
-    - pytorch
-    - scipy
+    - python {{ python }}
+    - pytorch-base {{ pytorch }}
+    - scipy {{ scipy }}
 
 test:
   imports:
-- 
2.40.1

